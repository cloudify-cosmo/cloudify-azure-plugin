version: 2.1

orbs:
  node: cloudify/public-unittest-orb@1 #orb version
  wagonorb: cloudify/wagon-bulder-orb@1 #orb version
  releaseorb: cloudify/release-orb@1 #orb version
  managerorb: cloudify/manager-orb@1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:

  py36:
    docker:
      - image: circleci/python:3.6

  cloudify-machine-py3:
    machine:
      image: ubuntu-1604:201903-01

commands:

  create_manager_container_505:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive --remote
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip===20.3.3
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.5/ga-release/cloudify-docker-manager-5.0.5.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.5.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.5.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip

  prepare_test_manager:
    steps:
      - run: ecosystem-test prepare-test-manager -l $TEST_LICENSE -es azure_client_id=$azure_client_id -es azure_client_secret=$azure_client_secret -es azure_location=$azure_location -es azure_subscription_id=$azure_subscription_id -es azure_tenant_id=$azure_tenant_id --bundle-path workspace/build/cloudify-plugins-bundle.tgz --yum-package python-netaddr --yum-package git

  run_hello_world_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/hello-world-example/azure.yaml --test-id=hello-world-example -i resource_prefix=azpl -i resource_suffix=test$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=1800

  run_azure_arm_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/virtual-machine/azure-arm.yaml --test-id=virtual-machine -i resource_prefix=azpl -i resource_suffix=test$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=1800

  run_aks_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/blueprint-examples/kubernetes/azure-aks/blueprint.yaml --test-id=azure-aks -i resource_suffix=it --on-failure=uninstall-force --timeout=3000

  run_lb_test:
    steps:
      - run: ecosystem-test local-blueprint-test  -b examples/load-balancer-blueprint.yaml --test-id=azure-aks -i resource_prefix=lb-test-$CIRCLE_BUILD_NUM --on-failure=uninstall-force --timeout=3000

jobs:

  hw_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - prepare_test_manager
      - run_hello_world_test

  lb_integration_test:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - prepare_test_manager
      - run_lb_test

  azure_arm_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - prepare_test_manager
      - run_azure_arm_test

  aks_integration_tests_py3:
    executor: cloudify-machine-py3
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - managerorb/create_manager_container_latest
      - prepare_test_manager
      - run_aks_test

workflows:
  version: 2
  tests:
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
      - hw_integration_tests_py3:
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - azure_arm_integration_tests_py3:
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - aks_integration_tests_py3:
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - lb_integration_test:
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - releaseorb/release:
          filters:
            branches:
              only: /master/
          requires:
            - node/unittests_job
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
            - hw_integration_tests_py3
            - azure_arm_integration_tests_py3
            - aks_integration_tests_py3
      - releaseorb/merge_docs_job:
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job
  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,1,3,5"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
          requires:
            - wagonorb/arch64_wagon
            - wagonorb/wagon
            - wagonorb/rhel_wagon
      - hw_integration_tests_py3:
          requires:
            - wagonorb/arch64_wagon
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - azure_arm_integration_tests_py3:
          requires:
            - wagonorb/arch64_wagon
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - aks_integration_tests_py3:
          requires:
            - wagonorb/arch64_wagon
            - wagonorb/wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/

  lb_weekly_test:
    triggers:
    - schedule:
        cron: "0 1 * * 2"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/unittests_job
      - node/validate_version_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/build_bundle:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/arch64_wagon
            - wagonorb/wagon
            - wagonorb/rhel_wagon
      - lb_integration_test:
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - wagonorb/build_bundle
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
