###########################################################
# This Blueprint installs the nodecellar application
# on a microsoft azure cloud environment.
###########################################################

tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3rc1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-azure-plugin/master/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3rc1/plugin.yaml
  - types/nodecellar.yaml
  - types/azure-types.yaml

#####################################################################################
# inputs section allows the user to use same
# blueprint for creating different deployments, each one
# with its own parameters.
# to specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.json
#####################################################################################

inputs:
  subscription_id:
    type: string
    default: ''

  location:
    type: string
    default: 'West US'  

  vm_prefix:
    type: string
    default: 'cfy'

  vm_size: 
    type: string
    default: 'Standard_A2'
  
  image_reference_offer:
    type: string
    default: 'UbuntuServer'
    
  image_reference_publisher:
    type: string
    default: 'Canonical'
    
  image_reference_sku:
    type: string
    default: '14.04.2-LTS'
    
  use_external_resource:
    type: boolean
    default: false

  existing_resource_group_name:
    type: string
    default: ''
    
  existing_security_group_name:
    type: string
    default: ''

  existing_storage_account_name:
    type: string
    default: ''

  existing_vnet_name:
    type: string
    default: ''

  subnet:
    type: string
    default: ''

  existing_public_ip_name:
    type: string
    default: ''

  existing_nic_name:
    type: string
    default: ''

  key_data:
    type: string
    default: ''

  ssh_key_path:
    type: string
    default: '~/.ssh/id_rsa'

  client_id:
    type: string
    default: ''

  tenant_id:
    type: string
    default: ''

  ssh_username:
    type: string
    default: ''
  
  aad_password:
    type: string
    default: ''

  agents_user:
    type: string
    default: 'azuretest'

node_templates:

  mongod_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:
      - target: mongod_nic
        type: cloudify.azure.relationships.server_connected_to_nic
      - target: nodecellar_storage_account
        type: cloudify.azure.relationships.server_connected_to_storage_account
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.resource_contained_in_resource_group

  nodejs_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:
      - target: nodejs_nic
        type: cloudify.azure.relationships.server_connected_to_nic
      - target: nodecellar_storage_account
        type: cloudify.azure.relationships.server_connected_to_storage_account
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.resource_contained_in_resource_group

  nodecellar_resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: true
      existing_resource_group_name: { get_input: existing_resource_group_name}
      
    relationships:
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token
     
  nodecellar_storage_account:
    type: cloudify.azure.nodes.StorageAccount
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: true
      existing_storage_account_name: { get_input: existing_storage_account_name}
      
    relationships:
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.storage_account_contained_in_resource_group
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token

  nodejs_public_ip:
    type: cloudify.azure.nodes.PublicIP
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_public_ip_name: { get_input: existing_public_ip_name}
      
    relationships:
      - target: nodecellar_vnet
        type: cloudify.azure.relationships.public_ip_connected_to_vnet
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.resource_contained_in_resource_group

  nodejs_nic:
    type: cloudify.azure.nodes.NIC
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_nic_name: { get_input: existing_nic_name}
      
    relationships:
      - target: nodejs_public_ip
        type: cloudify.azure.relationships.nic_connected_to_public_ip
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.resource_contained_in_resource_group

  mongod_nic:
    type: cloudify.azure.nodes.NIC
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_nic_name: { get_input: existing_nic_name}
      
    relationships:
      - target: nodecellar_vnet
        type: cloudify.azure.relationships.nic_connected_to_vnet
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.resource_contained_in_resource_group

  nodecellar_subnet:
    type: cloudify.azure.nodes.Subnet
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: true
      subnet: { get_input: subnet}

    relationships:
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.subnet_contained_in_resource_group
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token


  nodecellar_vnet:
    type: cloudify.azure.nodes.VNET
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: true
      existing_vnet_name: { get_input: existing_vnet_name}

    relationships:
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token
      - target: nodecellar_subnet
        type: cloudify.azure.relationships.vnet_connected_to_subnet
      - target: nodecellar_resource_group
        type: cloudify.azure.relationships.vnet_contained_in_resource_group

  azure_token:
    type: cloudify.azure.nodes.azure_token
    properties:
      client_id: { get_input: client_id }
      tenant_id: { get_input: tenant_id }
      aad_password: { get_input: aad_password }

  mongod:
    type: nodecellar.nodes.MonitoredMongoDatabase
    relationships:
      - type: cloudify.relationships.contained_in
        target: mongod_host

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: nodejs_host

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule    
    relationships:

      ################################
      # Setting the mongo connection
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Setting the nodejs connection
      ################################

      - type: node_contained_in_nodejs
        target: nodejs


###########################################################
# This outputs section exposes the application endpoint.
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [nodejs_host, vm_public_ip] }
      port: { get_property: [nodecellar, port] }
