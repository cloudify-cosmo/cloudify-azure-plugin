tosca_definitions_version: cloudify_dsl_1_2

description: >
  This blueprint defines two Azure Linux VMs (within an Availability Set) connected
  to a Load Balancer and running an Nginx web server + Cloudify example web app. 

imports:
- http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
- https://raw.githubusercontent.com/01000101/cloudify-azure-plugin/rebuild/plugin.yaml


inputs:
  resource_prefix:
    default: cfy
  resource_suffix:
    default: 10
  # Azure account information
  location:
    type: string
    required: true
    default: eastus
  retry_after:
    type: integer
    default: 60
  # Existing manager resources
  mgr_resource_group_name:
    type: string
    required: true
  mgr_virtual_network_name:
    type: string
    required: true
  mgr_subnet_name:
    type: string
    required: true
  # Virtual Machine information
  vm_size: 
    type: string
    required: true
    default: Standard_A2
  vm_os_family:
    type: string
    required: true
    default: linux
  vm_image_publisher: 
    type: string
    required: true
    default: OpenLogic
  vm_image_offer: 
    type: string
    required: true
    default: CentOS
  vm_image_sku:
    type: string
    required: true
    default: '7.0'
  vm_image_version:
    type: string
    required: true
    default: latest
  vm_os_username:
    description: >
      Username to create as the VM's administrator user
    type: string
    required: true
    default: cloudify
  vm_os_password:
    description: >
      Password to use for the VM's administrator user
    type: string
    required: true
    default: Cl0ud1fy!
  vm_os_pubkeys:
    required: true
  vm_os_pubkey_auth_only:
    default: true
  # Application information
  #webserver_port:
  #  description: The internal Microsoft IIS web server port
  #  default: 8080
  #loadbalancer_port:
  #  description: The external Azure Load Balancer port
  #  default: 80


node_templates:
  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      name: {concat:[{get_input: resource_prefix},rg,{get_input: resource_suffix}]}
      location: { get_input: location }
      
  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      name: {concat:[{get_input: resource_prefix},sa,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        accountType: Standard_LRS
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
  
  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      resource_group_name: { get_input: mgr_resource_group_name }
      name: { get_input: mgr_virtual_network_name }
      use_external_resource: true
      location: { get_input: location }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
      
  subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      resource_group_name: { get_input: mgr_resource_group_name }
      name: { get_input: mgr_subnet_name }
      use_external_resource: true
      location: { get_input: location }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network
  
  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      name: {concat:[{get_input: resource_prefix},nsg,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        securityRules:
        - name: nsr_ssh
          properties:
            description: SSH access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: 22
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 100
            access: Allow
            direction: Inbound
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  availability_set:
    type: cloudify.azure.nodes.compute.AvailabilitySet
    properties:
      name: {concat:[{get_input: resource_prefix},availset,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  vm1:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      name: {concat:[{get_input: resource_prefix},vm1,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      os_family: { get_input: vm_os_family }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: vm_size }
        storageProfile:
          imageReference:
            publisher: { get_input: vm_image_publisher }
            offer: { get_input: vm_image_offer }
            sku: { get_input: vm_image_sku }
            version: { get_input: vm_image_version }
          dataDisks:
          - diskSizeGB: 2
          - diskSizeGB: 1
        osProfile:
          computerName: { get_property: [SELF, name] }
          adminUsername: { get_input: vm_os_username }
          adminPassword: { get_input: vm_os_password }
          linuxConfiguration:
            ssh:
              publicKeys: { get_input: vm_os_pubkeys }
            disablePasswordAuthentication: { get_input: vm_os_pubkey_auth_only }
      agent_config:
        user: { get_input: vm_os_username }
        password: { get_input: vm_os_password }
        install_method: remote
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: vm1_nic
     
  vm1_public_ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      name: {concat:[{get_input: resource_prefix},vm1pip,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
     
  vm1_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      name: {concat:[{get_input: resource_prefix},vm1ip,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: vm1_public_ip
   
  vm1_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      name: {concat:[{get_input: resource_prefix},vm1nic,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.connected_to_ip_configuration
      target: vm1_nic_ip_cfg
  