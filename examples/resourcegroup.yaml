tosca_definitions_version: cloudify_dsl_1_2

imports:
- http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
- https://raw.githubusercontent.com/01000101/cloudify-azure-plugin/rebuild/plugin.yaml

inputs:
  resource_prefix:
    default: cfy
  resource_suffix:
    default: 10
  subscription_id:
    type: string
    required: true
  tenant_id:
    type: string
    required: true
  client_id:
    type: string
    required: true
  client_secret:
    type: string
    required: true
  location:
    type: string
    required: true
    default: eastus
  retry_after:
    type: integer
    default: 60
  # Existing resources (manager)
  mgr_resource_group_name:
    type: string
    required: true
  mgr_virtual_network_name:
    type: string
    required: true
  mgr_subnet_name:
    type: string
    required: true
  # VM inputs
  vm_size: 
    type: string
    required: true
  vm_image_publisher: 
    type: string
    required: true
  vm_image_offer: 
    type: string
    required: true
  vm_image_sku:
    type: string
    required: true
  vm_image_version:
    type: string
    required: true
  vm_os_username: 
    type: string
    required: true
  vm_os_password: 
    type: string
    required: true
  # Auth inputs
  azure_config:
    default:
      subscription_id: { get_input: subscription_id }
      tenant_id: { get_input: tenant_id }
      client_id: { get_input: client_id }
      client_secret: { get_input: client_secret }


node_templates:
  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      name: {concat:[{get_input: resource_prefix},rg,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: { get_input: azure_config }
      
  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      name: {concat:[{get_input: resource_prefix},sa,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
      resource_config:
        accountType: Standard_LRS
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
      
  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      resource_group_name: { get_input: mgr_resource_group_name }
      name: { get_input: mgr_virtual_network_name }
      use_external_resource: true
      location: { get_input: location }
      azure_config: { get_input: azure_config }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
      
  subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      resource_group_name: { get_input: mgr_resource_group_name }
      name: { get_input: mgr_subnet_name }
      use_external_resource: true
      location: { get_input: location }
      azure_config: { get_input: azure_config }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network
      
  #route_table:
  #  type: cloudify.azure.nodes.network.RouteTable
  #  properties:
  #    name: {concat:[{get_input: resource_prefix},rt,{get_input: resource_suffix}]}
  #    location: { get_input: location }
  #    retry_after: { get_input: retry_after }
  #    azure_config: { get_input: azure_config }
  #  relationships:
  #  - type: cloudify.azure.relationships.contained_in_resource_group
  #    target: resource_group
  #  - type: cloudify.azure.relationships.route_table_attached_to_subnet
  #    target: subnet
  #    
  #route_internet:
  #  type: cloudify.azure.nodes.network.Route
  #  properties:
  #    name: {concat:[{get_input: resource_prefix},route,{get_input: resource_suffix}]}
  #    location: { get_input: location }
  #    retry_after: { get_input: retry_after }
  #    azure_config: { get_input: azure_config }
  #    resource_config:
  #      addressPrefix: 0.0.0.0/0
  #      nextHopType: Internet
  #  relationships:
  #  - type: cloudify.azure.relationships.contained_in_route_table
  #    target: route_table
  #
  #route_cfy_manager:
  #  type: cloudify.azure.nodes.network.Route
  #  properties:
  #    name: {concat:[{get_input: resource_prefix},route,{get_input: resource_suffix}]}
  #    location: { get_input: location }
  #    retry_after: { get_input: retry_after }
  #    azure_config: { get_input: azure_config }
  #    resource_config:
  #      addressPrefix: 10.1.0.0/16
  #      nextHopType: VnetLocal
  #  relationships:
  #  - type: cloudify.azure.relationships.contained_in_route_table
  #    target: route_table
  #  - type: cloudify.relationships.depends_on
  #    target: route_internet
  
  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      name: {concat:[{get_input: resource_prefix},nsg,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
      
  network_security_rule_rdp:
    type: cloudify.azure.nodes.network.NetworkSecurityRule
    properties:
      name: {concat:[{get_input: resource_prefix},nsr_rdp,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
      resource_config:
        description: RDP allow
        protocol: Tcp
        sourcePortRange: '*'
        destinationPortRange: 3389
        sourceAddressPrefix: '*'
        destinationAddressPrefix: '*'
        priority: 100
        access: Allow
        direction: Inbound
    relationships:
    - type: cloudify.azure.relationships.contained_in_network_security_group
      target: network_security_group
      
  availability_set:
    type: cloudify.azure.nodes.compute.AvailabilitySet
    properties:
      name: {concat:[{get_input: resource_prefix},availset,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  vm:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      name: {concat:[{get_input: resource_prefix},vm,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: vm_size }
        storageProfile:
          imageReference:
            publisher: { get_input: vm_image_publisher }
            offer: { get_input: vm_image_offer }
            sku: { get_input: vm_image_sku }
            version: { get_input: vm_image_version }
        osProfile:
          computerName: { get_property: [SELF, name] }
          adminUsername: { get_input: vm_os_username }
          adminPassword: { get_input: vm_os_password }
      agent_config:
        user: { get_input: vm_os_username }
        password: { get_input: vm_os_password }
        install_method: none
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: vm_nic
     
  vm_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      name: {concat:[{get_input: resource_prefix},ipvm,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
   
  vm_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      name: {concat:[{get_input: resource_prefix},nicvm,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.connected_to_ip_configuration
      target: vm_nic_ip_cfg
    - type: cloudify.azure.relationships.nic_connected_to_lb_be_pool
      target: load_balancer_backend_pool
     
  vm_webapp:
    type: cloudify.azure.nodes.compute.VirtualMachineExtension
    properties:
      name: vm_webapp
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
      resource_config:
        publisher: Microsoft.Powershell
        ext_type: DSC
        typeHandlerVersion: '2.8'
        settings:
          ModulesUrl: https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-iis-server-windows-vm/ContosoWebsite.ps1.zip
          ConfigurationFunction: ContosoWebsite.ps1\ContosoWebsite
          Properties:
            Machinename: { get_property: [vm, name] }
    relationships:
    - type: cloudify.azure.relationships.vmx_contained_in_vm
      target: vm
      
  lb_public_ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      name: {concat:[{get_input: resource_prefix},pip,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
      
  lb_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      name: {concat:[{get_input: resource_prefix},iplb,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: lb_public_ip
      
  load_balancer:
    type: cloudify.azure.nodes.network.LoadBalancer
    properties:
      name: {concat:[{get_input: resource_prefix},lb,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_ip_configuration
      target: lb_ip_cfg
      
  load_balancer_backend_pool:
    type: cloudify.azure.nodes.network.LoadBalancer.BackendAddressPool
    properties:
      name: lbbepool
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: { get_input: azure_config }
    relationships:
    - type: cloudify.azure.relationships.contained_in_load_balancer
      target: load_balancer
  