tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.4/types.yaml
  - plugin.yaml

inputs:

  subscription_id:
    type: string

  tenant_id:
    type: string

  client_id:
    type: string

  client_secret:
    type: string

  resource_group_name:
    type: string

  virtual_network_name:
    type: string

  subnet_name:
    type: string

  subnet_address_prefix:
    type: string
    default: 10.10.0.0/24

  existing_subnet:
    type: boolean
    default: true

  vm_name:
    type: string

  vm_image_id:
    type: string

  vm_username:
    type: string
    default: centos

  vm_public_key:
    type: string

  location:
    type: string
    default: eastus

  vm_image_size:
    type: string

  endpoint_resource:
    default: https://management.core.windows.net/

  endpoints_resource_manager:
    default: https://management.azure.com

  endpoint_verify:
    default: True

  endpoint_storage:
    type: string
    default: core.windows.net

  endpoints_active_directory:
    type: string
    default: https://login.microsoftonline.com

  api_version:
    type: string
    default: "2018-07-01"

dsl_definitions:

  azure_configuration: &client_config
    subscription_id: { get_input: subscription_id }
    tenant_id: { get_input: tenant_id }
    client_id: { get_input: client_id }
    client_secret: { get_input: client_secret }
    endpoint_resource: { get_input: endpoint_resource }
    endpoints_resource_manager: { get_input: endpoints_resource_manager }
    endpoint_verify: { get_input: endpoint_verify }
    endpoints_active_directory: { get_input: endpoints_active_directory }

node_templates:

  cloudify_host:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      azure_config: *client_config
      api_version: '2018-04-01'
      name: { get_input: vm_name }
      location: { get_input: location }
      os_family: linux
      resource_config:
        hardwareProfile:
          vmSize: { get_input: vm_image_size }
        storageProfile:
          imageReference:
            id: { get_input: vm_image_id }
          osDisk:
            caching: ReadWrite
            managedDisk:
              storageAccountType: Standard_LRS
        osProfile:
          computerName: { get_input: vm_name }
          adminUsername: { get_input: vm_username }
          adminPassword: ''
          linuxConfiguration:
            ssh:
              publicKeys:
              - keydata: { get_input: vm_public_key }
                path: { concat: [ '/home/', { get_input: vm_username }, '/.ssh/authorized_keys' ] }
            disablePasswordAuthentication: true
      agent_config:
        install_method: none
      storage_endpoint: { get_input: endpoint_storage }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
#      - type: cloudify.azure.relationships.connected_to_storage_account
#        target: storage_account
      - type: cloudify.azure.relationships.connected_to_nic
        target: nic

  nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *client_config
      api_version: { get_input: api_version }
      name: { concat: [ { get_input: vm_name }, 'nic' ] }
      location: { get_input: location }
      retry_after: 5
      primary: true
    relationships:
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: ip_config
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: security_group

  ip_config:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *client_config
      api_version: { get_input: api_version }
      name: { concat: [ { get_input: vm_name }, 'ipconfig' ] }
      location: { get_input: location }
      retry_after: 5
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: subnet
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: ip

  security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      azure_config: *client_config
      api_version: '2016-03-30'
      name: { concat: [ { get_input: vm_name }, 'group' ] }
      location: { get_input: location }
      retry_after: 5
      resource_config:
        securityRules:
        - name: all_tcp
          properties:
            description: All TCP
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: '*'
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 100
            access: Allow
            direction: Inbound
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      azure_config: *client_config
      api_version: { get_input: api_version }
      name: { concat: [ { get_input: vm_name }, 'publicip' ] }
      location: { get_input: location }
      retry_after: 5
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      azure_config: *client_config
      api_version: { get_input: api_version }
      use_external_resource: { get_input: existing_subnet }
      name: { get_input: subnet_name }
      location: { get_input: location }
      retry_after: 5
      resource_config:
        addressPrefix: { get_input: subnet_address_prefix }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      azure_config: *client_config
      api_version: { get_input: api_version }
      use_external_resource: true
      name: { get_input: virtual_network_name }
      location: { get_input: location }
      retry_after: 5
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      azure_config: *client_config
      api_version: { get_input: api_version }
      use_external_resource: true
      name: { get_input: resource_group_name }
      location: { get_input: location }
