tosca_definitions_version: cloudify_dsl_1_1

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-azure-plugin/master/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.2.1/plugin.yaml
  
inputs:
  
  subscription_id:
    type: string
    default: ''

  location:
    type: string
    default: 'West US'  

  vm_name:
    type: string
    default: 'my_vm'

  vm_size: 
    type: string
    default: 'Standard A0'
  
  vm_os_type:
    type: string
    default: 'UbuntuServer'

  key_data:
    type: string
    default: ''

  ssh_key_path:
    type: string
    default: '~/.ssh/id_rsa'

  client_id:
    type: string
    default: ''

  tenant_id:
    type: string
    default: ''

  username:
    type: string
    default: ''
  
  password:
    type: string
    default: ''

  agents_user:
    type: string
    default: 'azuretest'

node_templates:

  manager_server:
    type: cloudify.azure.nodes.Server
    properties:
      vm_name: { get_input: vm_name }
      vm_os_type: { get_input: vm_os_type}
      vm_size: { get_input: vm_size}
      key_data: { get_input: key_data}
      subscription_id: { get_input: subscription_id}
      location: { get_input: location }
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      username: { get_input: username}
      password: { get_input: password}
      install_agent: false
    relationships:
      - target: manager_nic
        type: cloudify.azure.relationships.server_connected_to_nic

  manager_resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      username: { get_input: username}
      password: { get_input: password}

  manager_storage_account:
    type: cloudify.azure.nodes.StorageAccount
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      username: { get_input: username}
      password: { get_input: password}
    relationships:
      - target: manager_resource_group
        type: cloudify.azure.relationships.storage_account_connected_to_resource_group

  manager_public_ip:
    type: cloudify.azure.nodes.PublicIP
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      username: { get_input: username}
      password: { get_input: password}
    relationships:
      - target: manager_vnet
        type: cloudify.azure.relationships.public_ip_connected_to_vnet

  manager_nic:
    type: cloudify.azure.nodes.NIC
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      username: { get_input: username}
      password: { get_input: password}
    relationships:
      - target: manager_public_ip
        type: cloudify.azure.relationships.nic_connected_to_public_ip

  manager_vnet:
    type: cloudify.azure.nodes.VNET
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      username: { get_input: username}
      password: { get_input: password}
    relationships:
      - target: manager_storage_account
        type: cloudify.azure.relationships.vnet_connected_to_storage_account

  manager:
    type: cloudify.nodes.CloudifyManager
    properties:
      cloudify_packages:
        agents:
          ubuntu_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.1/ga-RELEASE/cloudify-ubuntu-agent_3.2.1-ga-b212_amd64.deb
          centos_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.1/ga-RELEASE/cloudify-centos-final-agent_3.2.1-ga-b212_amd64.deb
          windows_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.1/ga-RELEASE/cloudify-windows-agent_3.2.1-ga-b212_amd64.deb
        docker:
           docker_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.1/ga-RELEASE/cloudify-docker_3.2.1-ga-b212.tar

      cloudify:
        cloudify_agent:
          min_workers: 0
          max_workers: 5
          remote_execution_port: 22
          user: { get_input: agents_user }

        workflows:
          task_retries: -1  # this means forever
          task_retry_interval: 30

        policy_engine:
          start_timeout: 30

    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file: scripts/configure.py
            task_name: configure
            task_properties:
              azure_config: { get_property: [ azure_configuration, azure_config ] }
            fabric_env:
              user: { get_input: agents_user }
              key_filename: { get_input: ssh_key_path }              
              host_string: { get_attribute: [manager_public_ip, vm_public_ip }
        start:
          implementation: fabric.fabric_plugin.tasks.run_module_task
          inputs:
            task_mapping: cloudify_cli.bootstrap.tasks.bootstrap_docker
            task_properties:
              cloudify_packages: { get_property: [manager, cloudify_packages] }
              agent_local_key_path: { get_input: ssh_key_path }
              provider_context: { get_attribute: [manager, provider_context] }
            fabric_env:
              user: { get_input: agents_user }
              key_filename: { get_input: ssh_key_path }
              host_string: { get_attribute: [manager_public_ip, vm_public_ip }
        stop:
          implementation: fabric.fabric_plugin.tasks.run_module_task
          inputs:
            task_mapping: cloudify_cli.bootstrap.tasks.stop_manager_container
            fabric_env:
              user: { get_input: agents_user }
              key_filename: { get_input: ssh_key_path }
              host_string: { get_attribute: [manager_public_ip, vm_public_ip }
        delete:
          implementation: fabric.fabric_plugin.tasks.run_module_task
          inputs:
            task_mapping: cloudify_cli.bootstrap.tasks.stop_docker_service
            fabric_env:
              user: { get_input: agents_user }
              key_filename: { get_input: ssh_key_path }
              host_string: { get_attribute: [manager_public_ip, vm_public_ip } 

      cloudify.interfaces.validation:
        creation:
          implementation: cli.cloudify_cli.bootstrap.tasks.creation_validation
          inputs:
            cloudify_packages: { get_property: [ manager, cloudify_packages ] }
  
    relationships:
      - target: manager_server
        type: cloudify.relationships.contained_in

  azure_configuration:
    type: azure_configuration_node
    properties:
      azure_config:
       subscription_id: { get_input: subscription_id }
       location: { get_input: location }
       vm_name: { get_input: vm_name }
       vm_size: { get_input: vm_size }
       vm_os_type: { get_input: vm_os_type }
       client_id: { get_input: client_id }
       tenant_id: { get_input: tenant_id }
       username: { get_input: username }
       password: { get_input: password }

node_types:
  azure_configuration_node:
    derived_from: cloudify.nodes.Root
    properties:
      azure_config: {}

plugins:
    cli:
      executor: central_deployment_agent
      install: false
