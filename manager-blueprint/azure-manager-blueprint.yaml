tosca_definitions_version: cloudify_dsl_1_1

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-azure-plugin/master/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.2/plugin.yaml

inputs:
  
  subscription_id:
    type: string
    default: ''

  location:
    type: string
    default: 'West US'  

  vm_name:
    type: string
    default: 'my_vm'

  vm_size: 
    type: string
    default: 'Standard A0'
  
  vm_os_type:
    type: string
    default: 'UbuntuServer'

  key_data:
    type: string
    default: ''

  client_id:
    type: string
    default: ''
    
  tenant_id:
    type: string
    default: ''
    
  username:
    type: string
    default: ''
    
  password:
    type: string
    default: ''
    
node_templates:

  agent_server:
    type: cloudify.azure.nodes.Server
    properties:
      vm_name: { get_input: vm_name }
      vm_os_type: { get_input: vm_os_type}
      vm_size: { get_input: vm_size}
      key_data: { get_input: key_data}
      subscription_id:{ get_input: subscription_id}
      location:{ get_input: location }
        
    relationships:
      - target: agent_resource_group
        type: cloudify.azure.relationships.instance_contained_in_resource_group
      - target: agent_public_ip
        type: cloudify.azure.relationships.instance_connected_to_public_ip
      - target: agent_storage_account
        type: cloudify.azure.relationships.instance_connected_to_storage_account
      - target: agent_nic
        type: cloudify.azure.relationships.instance_connected_to_nic
      - target: agent_vnet
        type: cloudify.azure.relationships.instance_connected_to_vnet
      
  agent_resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id:{ get_input: subscription_id}
        
  agent_storage_account:
    type: cloudify.azure.nodes.StorageAccount
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id:{ get_input: subscription_id}
        
  agent_public_ip:
    type: cloudify.azure.nodes.PublicIP
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id:{ get_input: subscription_id}
    
  agent_nic:
    type: cloudify.azure.nodes.NIC
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id:{ get_input: subscription_id}

  agent_vnet:
    type: cloudify.nodes.VNET
    properties:
      vm_name: { get_input: vm_name }
      location: { get_input: location}
      subscription_id:{ get_input: subscription_id}
 
  manager:
    type: cloudify.nodes.CloudifyManager
    properties:
      cloudify_packages:
        agents:
          ubuntu_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-ubuntu-commercial-agent_3.2.0-ga-b200_amd64.deb
          centos_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-centos-final-agent_3.2.0-ga-b200_amd64.deb
          windows_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-windows-agent_3.2.0-ga-b200_amd64.deb
        docker:
          docker_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.2.0/ga-RELEASE/cloudify-docker-commercial_3.2.0-ga-b200.tar

plugins:
    azure:
        executor: central_deployment_agent
        install: false
