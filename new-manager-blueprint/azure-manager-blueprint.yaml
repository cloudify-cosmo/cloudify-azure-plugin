tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m6/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-azure-plugin/master/plugin.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3m6/plugin.yaml
  - types/manager-types.yaml


inputs:

  #############################
  # Provider specific Inputs
  #############################
  
  subscription_id:
    type: string
    default: ''

  location:
    type: string
    default: 'West US'

  vm_prefix:
    type: string
    default: 'cfy'

  vm_size:
    type: string
    default: 'Standard_A2'

  image_reference_offer:
    type: string
    default: 'UbuntuServer'

  image_reference_publisher:
    type: string
    default: 'Canonical'

  use_external_resource:
    type: boolean
    default: false

  existing_resource_group_name:
    type: string
    default: ''
    
  existing_security_group_name:
    type: string
    default: ''

  existing_storage_account_name:
    type: string
    default: ''

  existing_vnet_name:
    type: string
    default: ''

  existing_public_ip_name:
    type: string
    default: ''

  existing_nic_name:
    type: string
    default: ''

  image_reference_sku:
    type: string
    default: '14.04.2-LTS'

  key_data:
    type: string
    default: ''

  ssh_key_path:
    type: string
    default: '~/.ssh/'
    
  ssh_key_filename:
    type: string
    default: 'id_rsa'

  client_id:
    type: string
    default: ''

  tenant_id:
    type: string
    default: ''

  aad_password:
    type: string
    default: ''

  ssh_user:
    type: string
    default: 'azuretest'
    
  #############################
  # Security Settings
  #############################
  username:
    default: admin

  password:
    default: admin

  #############################
  # Agent Packages
  #############################

  # Nginx, being the fileserver, also serves agent packages.
  # The key names of the agents must be in the format: distro_release_agent
  # as the key is what's used to name the file, which later allows our
  # agent installer to identify it for your distro and release automatically.
  agent_package_urls:
    default:
      ubuntu_trusty_agent: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/Ubuntu-trusty-agent_3.3.0-m6-b276.tar.gz
      ubuntu_precise_agent: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/Ubuntu-precise-agent_3.3.0-m6-b276.tar.gz
      centos_7x_agent: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/centos-Core-agent_3.3.0-m6-b276.tar.gz
      centos_6x_agent: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/centos-Final-agent_3.3.0-m6-b276.tar.gz
      cloudify_windows_agent: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/cloudify-windows-agent_3.3.0-m6-b276.exe

  #############################
  # Cloudify Modules
  #############################
  rest_service_rpm_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/cloudify-rest-service-3.3.0-m6_b276.x86_64.rpm

  management_worker_rpm_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/cloudify-management-worker-3.3.0-m6_b276.x86_64.rpm

  amqpinflux_rpm_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/cloudify-amqp-influx-3.3.0-m6_b276.x86_64.rpm

  cloudify_resources_url:
    type: string
    default: https://github.com/cloudify-cosmo/cloudify-manager/archive/3.3m6.tar.gz

  webui_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.3.0/m6-RELEASE/cloudify-ui-3.3.0-m6-b276.tgz

  # This is a Cloudify specific redistribution of Grafana.
  grafana_source_url:
    type: string
    default: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/grafana-1.9.0.tgz

  #############################
  # External Components
  #############################
  pip_source_rpm_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/python-pip-7.1.0-1.el7.noarch.rpm

  java_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/jre1.8.0_45-1.8.0_45-fcs.x86_64.rpm

  erlang_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/erlang-17.4-1.el6.x86_64.rpm

  rabbitmq_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/rabbitmq-server-3.5.3-1.noarch.rpm

  elasticsearch_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/elasticsearch-1.6.0.noarch.rpm

  elasticsearch_curator_rpm_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/elasticsearch-curator-3.2.3-1.x86_64.rpm

  logstash_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/logstash-1.5.0-1.noarch.rpm

  nginx_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/nginx-1.8.0-1.el7.ngx.x86_64.rpm

  influxdb_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/influxdb-0.8.8-1.x86_64.rpm

  langohr_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/langohr.jar

  daemonize_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/daemonize-1.7.3-7.el7.x86_64.rpm

  riemann_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/riemann-0.2.6-1.noarch.rpm

  nodejs_source_url:
    type: string
    default: https://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/components/node-v0.10.35-linux-x64.tar.gz

  #############################
  # RabbitMQ Inputs
  #############################
  rabbitmq_events_queue_message_ttl:
    description: >
      Sets the number of milliseconds to wait before a message expires
      in the events queue.
    type: integer
    default: 60000

  rabbitmq_logs_queue_message_ttl:
    description: >
      Sets the number of milliseconds to wait before a message expires
      in the logs queue.
    type: integer
    default: 60000

  rabbitmq_metrics_queue_message_ttl:
    description: >
      Sets the number of milliseconds to wait before a message expires
      in the metrics queues.
    type: integer
    default: 60000

  # note that for each of the queue length limit properties, new messages
  # will be queued in RabbitMQ and old messages will be deleted once the
  # limit is reached!
  # https://www.rabbitmq.com/maxlength.html
  rabbitmq_events_queue_length_limit:
    description: >
      Sets the number of messages the logs queue can hold.
      Note this is NOT the message byte length!
    type: integer
    default: 1000000

  rabbitmq_logs_queue_length_limit:
    description: >
      Sets the number of messages the logs queue can hold.
      Note this is NOT the message byte length!
    type: integer
    default: 1000000

  rabbitmq_metrics_queue_length_limit:
    description: >
      Sets the number of messages the metrics queues can hold.
      This applies to both the queue that amqp-influx pulls from and
      the ones Riemann pulls from.
      Note this is NOT the message byte length!
    type: integer
    default: 1000000

  rabbitmq_fd_limit:
    description: >
      Sets the File Descriptor limit for the rabbitmq user.
    type: integer
    default: 102400

  #############################
  # Elasticsearch Inputs
  #############################
  # https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html
  elasticsearch_heap_size:
    type: string
    default: "2g"

  elasticsearch_java_opts:
    description: >
      Provide any JAVA_OPTS to Elasticsearch.
    type: string
    default: ''

  # The index for events/logs will be named `logstash-YYYY.mm.dd` and
  # A new index corresponding with today's date will be added each day.
  # Elasticsearch Curator is used to rotate the indices on a daily basis
  # via a cronjob.
  # https://www.elastic.co/blog/curator-tending-your-time-series-indices
  elasticsearch_index_rotation_interval:
    description: >
      Determines the number of days to keep.
    type: integer
    default: 7

  elasticsearch_endpoint_ip:
    description: >
      An IP Endpoint of your Elasticsearch Cluster.
    type: string
    default: ''

  elasticsearch_endpoint_port:
    description: >
      The Port of your Elasticsearch Cluster.
    type: integer
    default: 9200

  #############################
  # InfluxDB Inputs
  #############################
  influxdb_endpoint_ip:
    description: >
      An IP Endpoint of your InfluxDB Cluster.
    type: string
    default: ''

  #############################
  # Dev Inputs
  #############################

  # For development purposes, you can use these, which will override the modules
  # supplied within the rpm.
  # These should be pip installable tar.gz files.
  # Note that `install_python_compilers` must not be an empty string if one of the
  # below modules require compilation.
  install_python_compilers:
    type: string
    default: 'true'

  cli_source_url:
    type: string
    default: ''

  rest_service_source_url:
    type: string
    default: ''

  dsl_parser_source_url:
    type: string
    default: ''

  rest_client_source_url:
    type: string
    default: ''

  plugins_common_source_url:
    type: string
    default: ''

  script_plugin_source_url:
    type: string
    default: ''

  securest_source_url:
    type: string
    default: ''

  amqpinflux_source_url:
    type: string
    default: ''

  agent_source_url:
    type: string
    default: ''


dsl_definitions:
  azure_configuration: &azure_configuration
    subscription_id: { get_input: subscription_id }
    location: { get_input: location }
    vm_size: { get_input: vm_size }
    vm_prefix: { get_input: vm_prefix }       
    image_reference_offer: { get_input: image_reference_offer}
    image_reference_publisher: { get_input: image_reference_publisher}
    image_reference_sku: { get_input: image_reference_sku}
    client_id: { get_input: client_id }
    tenant_id: { get_input: tenant_id }
    ssh_username: { get_input: ssh_user }
    aad_password: { get_input: aad_password }
    use_external_resource: { get_input: use_external_resource }
    existing_resource_group_name: { get_input: existing_resource_group_name }
    existing_security_group_name: { get_input: existing_security_group_name }
    existing_storage_account_name: { get_input: existing_storage_account_name }
    existing_vnet_name: { get_input: existing_vnet_name }
    existing_nic_name: { get_input: existing_nic_name }
    existing_public_ip_name: { get_input: existing_public_ip_name }

######################################################################
# These nodes comprise the manager's infrastructure and components
######################################################################
node_templates:

  # #####################################################################
  # The manager_configuration node is meant to be read by Cloudify to
  # provide runtime configuration and information for the CLI and the
  # Manager.
  # #####################################################################
  manager_configuration:
    type: cloudify.nodes.MyCloudifyManager
    properties:
      ssh_user: { get_input: ssh_user }
      ssh_key_filename: { get_input: ssh_key_filename }
      agent_local_key_path: { get_input: ssh_key_path }
      cloudify:
        plugins:
          azure_config_path: ~/azure_config.json

        resources_prefix: { get_input: vm_prefix }

        transient_deployment_workers_mode:
          enabled: false
          global_parallel_executions_limit: 50

        cloudify_agent:
          min_workers: 0
          max_workers: 5
          remote_execution_port: 22
          user: { get_input: ssh_user }
          env:
            AZURE_CONFIG_PATH: { get_property: [SELF, cloudify, plugins, azure_config_path] }

        workflows:
          task_retries: -1  # this means forever
          task_retry_interval: 30

        policy_engine:
          start_timeout: 30

    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file: components/manager/scripts/configure.py
            task_name: configure
            task_properties:
              azure_config: *azure_configuration
            fabric_env:
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_key_path }
              host_string: { get_attribute: [manager_host, vm_public_ip] }
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: components/manager/scripts/configure_manager.sh
            fabric_env:
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_key_path }
              host_string: { get_attribute: [manager_host, vm_public_ip] }
              always_use_pty: true

    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
        target_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            postconfigure:
             implementation: components/manager/scripts/set_manager_public_ip.sh
             inputs:
              public_ip: { get_attribute: [manager_host, vm_public_ip] }
      - type: cloudify.relationships.depends_on
        target: nginx
        target_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            postconfigure: components/manager/scripts/set_manager_private_ip.sh


  manager_host:
    type: cloudify.azure.nodes.Server
    properties:
      image_reference_offer: { get_input: image_reference_offer}
      image_reference_publisher: { get_input: image_reference_publisher}
      image_reference_sku: { get_input: image_reference_sku}
      vm_prefix: { get_input: vm_prefix}      
      vm_size: { get_input: vm_size}
      key_data: { get_input: key_data}
      subscription_id: { get_input: subscription_id}
      location: { get_input: location }
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      ssh_username: { get_input: ssh_user}
      aad_password: { get_input: aad_password}
      install_agent: false
    relationships:
      - target: manager_nic
        type: cloudify.azure.relationships.server_connected_to_nic
      - target: manager_storage_account
        type: cloudify.azure.relationships.server_connected_to_storage_account
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token


  manager_resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_resource_group_name: { get_input: existing_resource_group_name}

    relationships:
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token


  manager_storage_account:
    type: cloudify.azure.nodes.StorageAccount
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_storage_account_name: { get_input: existing_storage_account_name}

    relationships:
      - target: manager_resource_group
        type: cloudify.azure.relationships.storage_account_contained_in_resource_group
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token

  manager_public_ip:
    type: cloudify.azure.nodes.PublicIP
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_public_ip_name: { get_input: existing_public_ip_name}

    relationships:
      - target: manager_vnet
        type: cloudify.azure.relationships.public_ip_connected_to_vnet
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token

  manager_nic:
    type: cloudify.azure.nodes.NIC
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_nic_name: { get_input: existing_nic_name}

    relationships:
      - target: manager_public_ip
        type: cloudify.azure.relationships.nic_connected_to_public_ip
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token

  manager_vnet:
    type: cloudify.azure.nodes.VNET
    properties:
      location: { get_input: location}
      subscription_id: { get_input: subscription_id}
      client_id: { get_input: client_id}
      tenant_id: { get_input: tenant_id}
      aad_password: { get_input: aad_password}
      use_external_resource: { get_input: use_external_resource}
      existing_vnet_name: { get_input: existing_vnet_name}

    relationships:
      - target: manager_resource_group
        type: cloudify.azure.relationships.vnet_contained_in_resource_group
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token

  azure_token:
    type: cloudify.azure.nodes.azure_token
    properties:
      client_id: { get_input: client_id }
      tenant_id: { get_input: tenant_id }
      aad_password: { get_input: aad_password }

  # #####################################################################
  # The Python and Java nodes are used to provide runtime environments
  # on specific hosts. It allows us to define the runtime environment
  # and install it only once per host and then have a node depend on it.
  # Note that Erlang and NodeJS are also installed as runtime envs as
  # part of the RabbitMQ and WebUI nodes respectively but as they're not
  # used by multiple nodes, we're not specifying them as independent
  # entities.
  # #####################################################################
  python_runtime:
    type: manager.nodes.PythonRuntime
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  java_runtime:
    type: manager.nodes.JavaRuntime
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  ######################################################################
  # These are the nodes comprising the Cloudify Manager's components
  ######################################################################
  rabbitmq:
    type: manager.nodes.RabbitMQ
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  elasticsearch:
    type: manager.nodes.Elasticsearch
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: java_runtime

  logstash:
    type: manager.nodes.Logstash
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: java_runtime
      - type: logstash_to_elasticsearch
        target: elasticsearch

  influxdb:
    type: manager.nodes.InfluxDB
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  nginx:
    type: manager.nodes.Nginx
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      # circular relationship
      # - type: nginx_to_webui
      #   target: webui

  riemann:
    type: manager.nodes.Riemann
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: java_runtime
      - type: riemann_to_rabbitmq
        target: rabbitmq
      - type: riemann_to_nginx
        target: nginx

  rest_service:
    type: manager.nodes.RestService
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: python_runtime
      - type: rest_to_mgr_config
        target: manager_configuration
      - type: restservice_to_elasticsearch
        target: elasticsearch
      - type: restservice_to_rabbitmq
        target: rabbitmq

  mgmt_worker:
    type: manager.nodes.ManagementWorker
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: python_runtime
      - type: mgmtworker_to_rabbitmq
        target: rabbitmq
      - type: mgmtworker_to_nginx
        target: nginx

  amqp_influx:
    type: manager.nodes.AmqpInfluxBroker
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: python_runtime
      - type: amqpinflux_to_rabbitmq
        target: rabbitmq
      - type: amqpinflux_to_influxdb
        target: influxdb

  webui:
    type: manager.nodes.WebUI
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      # circular relationship
      # - type: webui_to_nginx
      #   target: nginx
      - type: webui_to_influxdb
        target: influxdb

  ######################################################################
  # Enable this node if you want to have the CLI installed within
  # the manager. This might aid in debugging problems or just
  # controlling the manager from within itself.
  ######################################################################
  # cli:
  #   type: manager.nodes.CLI
  #   relationships:
  #     - type: cloudify.relationships.contained_in
  #       target: manager_host
  #     - type: cloudify.relationships.depends_on
  #       target: nginx
  #     - type: cloudify.relationships.depends_on
  #       target: restservice

plugins:
  cli:
    install: false
    executor: central_deployment_agent

outputs:
  manager_ip:
    value: { get_attribute: [manager_host, vm_public_ip] }
