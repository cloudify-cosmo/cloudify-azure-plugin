tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-azure-plugin/master/plugin.yaml
  - types/manager-types.yaml


inputs:

  #############################
  # Provider specific Inputs
  #############################

  subscription_id:
    type: string
    default: ''

  location:
    type: string
    default: 'West US'

  vm_prefix:
    type: string
    default: 'cfy'

  vm_size:
    type: string
    default: 'Standard_A2'

  image_reference_offer:
    type: string
    default: 'UbuntuServer'

  image_reference_publisher:
    type: string
    default: 'Canonical'

  use_external_resource:
    type: boolean
    default: false

  existing_resource_group_name:
    type: string
    default: ''
    
  existing_security_group_name:
    type: string
    default: ''

  existing_storage_account_name:
    type: string
    default: ''

  existing_vnet_name:
    type: string
    default: ''

  existing_public_ip_name:
    type: string
    default: ''

  existing_nic_name:
    type: string
    default: ''

  image_reference_sku:
    type: string
    default: '14.04.2-LTS'

  key_data:
    type: string
    default: ''

  agent_remote_key_path:
    type: string
    default: '/home/azuretest/.ssh/agent_kp.pem'

  agent_local_key_path:
    type: string
    default: '~/.ssh/id_rsa'
    
  ssh_key_filename:
    type: string
    default: '~/.ssh/id_rsa'

  client_id:
    type: string
    default: ''

  tenant_id:
    type: string
    default: ''

  aad_password:
    type: string
    default: ''

  subnet:
    type: string
    default: ''

  ssh_user:
    type: string
    default: 'azuretest'
    
  custom_script_path:
    type: string
    default: ''
    
  custom_script_command:
    type: string
    default: ''
    
  data_disk_size_GB:
    type: string
    default: '0'
    
  data_disk_logical_unit_number:
    type: integer
    default: 0
    
  security_group_priority: 
    type: string
    default: '100'
    
  security_group_protocol: 
    type: string
    default: '*'
    
  security_group_access: 
    type: string
    default: 'Allow'
    
  security_group_direction: 
    type: string
    default: 'Inbound'
    
  security_group_sourcePortRange: 
    type: string
    default: '*'
    
  security_group_destinationPortRange: 
    type: string
    default: '*'
    
  security_group_sourceAddressPrefix: 
    type: string
    default: '*'
    
  security_group_destinationAddressPrefix: 
    type: string
    default: '*'

  #############################
  # Security Settings
  #############################
  security_enabled:
    default: false

  ssl_enabled:
    default: false

  admin_username:
    default: admin

  admin_password:
    default: admin

  insecure_endpoints_disabled:
    description: Disables insecure REST endpoints
    type: boolean
    default: false

  #############################
  # Agent Packages
  #############################

  # Nginx, being the fileserver, also serves agent packages.
  # The key names of the agents must be in the format: distro_release_agent
  # as the key is what's used to name the file, which later allows our
  # agent installer to identify it for your distro and release automatically.
  agent_package_urls:
    default:
      ubuntu_trusty_agent: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/Ubuntu-trusty-agent_3.3.1-sp-b310.tar.gz
      ubuntu_precise_agent: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/Ubuntu-precise-agent_3.3.1-sp-b310.tar.gz
      centos_7x_agent: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/centos-Core-agent_3.3.1-sp-b310.tar.gz
      centos_6x_agent: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/centos-Final-agent_3.3.1-sp-b310.tar.gz
      redhat_7x_agent: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/redhat-Maipo-agent_3.3.1-sp-b310.tar.gz
      redhat_6x_agent: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/redhat-Santiago-agent_3.3.1-sp-b310.tar.gz
      cloudify_windows_agent: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify-windows-agent_3.3.1-sp-b310.exe

  #############################
  # Cloudify Modules
  #############################
  rest_service_rpm_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify-rest-service-3.3.1-sp_b310.x86_64.rpm

  management_worker_rpm_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify-management-worker-3.3.1-sp_b310.x86_64.rpm

  amqpinflux_rpm_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify-amqp-influx-3.3.1-sp_b310.x86_64.rpm

  cloudify_resources_url:
    type: string
    default: https://github.com/cloudify-cosmo/cloudify-manager/archive/3.3.1.tar.gz

  webui_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify-ui-3.3.1-sp-b310.tgz

  # This is a Cloudify specific redistribution of Grafana.
  grafana_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/grafana-1.9.0.tgz

  #############################
  # External Components
  #############################
  pip_source_rpm_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/python-pip-7.1.0-1.el7.noarch.rpm

  java_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/jre1.8.0_45-1.8.0_45-fcs.x86_64.rpm

  erlang_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/erlang-17.4-1.el6.x86_64.rpm

  rabbitmq_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/rabbitmq-server-3.5.3-1.noarch.rpm

  elasticsearch_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/elasticsearch-1.6.0.noarch.rpm

  elasticsearch_curator_rpm_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/elasticsearch-curator-3.2.3-1.x86_64.rpm

  logstash_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/logstash-1.5.0-1.noarch.rpm

  nginx_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/nginx-1.8.0-1.el7.ngx.x86_64.rpm

  influxdb_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/influxdb-0.8.8-1.x86_64.rpm

  langohr_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/langohr.jar

  daemonize_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/daemonize-1.7.3-7.el7.x86_64.rpm

  riemann_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/riemann-0.2.6-1.noarch.rpm

  nodejs_source_url:
    type: string
    default: http://repository.cloudifysource.org/org/cloudify3/components/node-v0.10.35-linux-x64.tar.gz

  #############################
  # RabbitMQ Inputs
  #############################
  rabbitmq_endpoint_ip:
    description: >
      Location of the rabbit server. If blank, the manager IP will be used.
      Note that if this is set, the external rabbit service must already exist with the appropriate
      credentials and configuration.
      If this is set, rabbit will not be installed on the manager. This may have security implications
      if you are using SSL for rabbit as some normally internal (to the manager) traffic is not currently
      encrypted.
    type: string
    default: ''

  rabbitmq_events_queue_message_ttl:
    description: >
      Sets the number of milliseconds to wait before a message expires
      in the events queue.
      Not used if an external endpoint is used.
    type: integer
    default: 60000

  rabbitmq_logs_queue_message_ttl:
    description: >
      Sets the number of milliseconds to wait before a message expires
      in the logs queue.
      Not used if an external endpoint is used.
    type: integer
    default: 60000

  rabbitmq_metrics_queue_message_ttl:
    description: >
      Sets the number of milliseconds to wait before a message expires
      in the metrics queues.
      Not used if an external endpoint is used.
    type: integer
    default: 60000

  rabbitmq_username:
    description: >
      Sets the username to use for clients such as celery to connect to the rabbitmq broker.
      It is recommended that you set both the username and password to something reasonably secure.
    type: string
    default: cloudify

  rabbitmq_password:
    description: >
      Sets the password to use for clients such as celery to connect to the rabbitmq broker.
      It is recommended that you set both the username and password to something reasonably secure.
    type: string
    default: c10udify

  rabbitmq_ssl_enabled:
    description: >
      Whether SSL should be enabled for RabbitMQ. If this is set to true then the public and private
      certs must be supplied (rabbitmq_cert_private, rabbitmq_cert_public inputs).
    type: boolean
    default: false

  rabbitmq_cert_private:
    description: >
      The private certificate for RabbitMQ to use for SSL. This must be PEM formatted.
      It is expected to begin with a line containing 'PRIVATE KEY' in the middle.
      Not used if an external endpoint is used.
    type: string
    default: ''

  rabbitmq_cert_public:
    description: >
      The public certificate for RabbitMQ to use for SSL. This does not need to be signed by any CA,
      as it will be deployed and explicitly used for all other components.
      It may be self-signed. It must be PEM formatted.
      It is expected to begin with a line of dashes with 'BEGIN CERTIFICATE' in the middle.
      If an external endpoint is used, this must be the public certificate associated with the private
      certificate that has already been configured for use by that rabbit endpoint.
    type: string
    default: ''

  # note that for each of the queue length limit properties, new messages
  # will be queued in RabbitMQ and old messages will be deleted once the
  # limit is reached!
  # https://www.rabbitmq.com/maxlength.html
  rabbitmq_events_queue_length_limit:
    description: >
      Sets the number of messages the eventss queue can hold.
      Note this is NOT the message byte length!
      Not used if an external endpoint is used.
    type: integer
    default: 1000000

  rabbitmq_logs_queue_length_limit:
    description: >
      Sets the number of messages the logs queue can hold.
      Note this is NOT the message byte length!
      Not used if an external endpoint is used.
    type: integer
    default: 1000000

  rabbitmq_metrics_queue_length_limit:
    description: >
      Sets the number of messages the metrics queues can hold.
      This applies to both the queue that amqp-influx pulls from and
      the ones Riemann pulls from.
      Note this is NOT the message byte length!
      Not used if an external endpoint is used.
    type: integer
    default: 1000000

  rabbitmq_fd_limit:
    description: >
      Sets the File Descriptor limit for the rabbitmq user.
      Not used if an external endpoint is used.
    type: integer
    default: 102400

  #############################
  # Elasticsearch Inputs
  #############################
  # https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html
  elasticsearch_heap_size:
    type: string
    default: "2g"

  elasticsearch_java_opts:
    description: >
      Provide any JAVA_OPTS to Elasticsearch.
    type: string
    default: ''

  # The index for events/logs will be named `logstash-YYYY.mm.dd` and
  # A new index corresponding with today's date will be added each day.
  # Elasticsearch Curator is used to rotate the indices on a daily basis
  # via a cronjob.
  # https://www.elastic.co/blog/curator-tending-your-time-series-indices
  elasticsearch_index_rotation_interval:
    description: >
      Determines the number of days to keep.
    type: integer
    default: 7

  elasticsearch_endpoint_ip:
    description: >
      An IP Endpoint of your Elasticsearch Cluster.
    type: string
    default: ''

  elasticsearch_endpoint_port:
    description: >
      The Port of your Elasticsearch Cluster.
    type: integer
    default: 9200

  #############################
  # InfluxDB Inputs
  #############################
  influxdb_endpoint_ip:
    description: >
      An IP Endpoint of your InfluxDB Cluster.
    type: string
    default: ''

  #############################
  # Upload Resources Inputs
  #############################
  plugin_resources:
      description: >
        Holds any archives that should be uploaded to the manager.
      default:
        - 'http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify_fabric_plugin-1.3.1-py27-none-linux_x86_64-centos-Core.wgn'
        - 'http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify_diamond_plugin-1.3.1-py27-none-linux_x86_64-redhat-Maipo.wgn'
        - 'http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify_diamond_plugin-1.3.1-py27-none-linux_x86_64-centos-Core.wgn'
        - 'http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify_diamond_plugin-1.3.1-py26-none-linux_x86_64-centos-Final.wgn'
        - 'http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify_diamond_plugin-1.3.1-py27-none-linux_x86_64-Ubuntu-precise.wgn'
        - 'http://repository.cloudifysource.org/org/cloudify3/3.3.1/sp-RELEASE/cloudify_diamond_plugin-1.3.1-py27-none-linux_x86_64-Ubuntu-trusty.wgn'

  dsl_resources:
    description: >
      Holds a set of dsl required resources
    default:
      - {'source_path': 'https://raw.githubusercontent.com/cloudify-cosmo/cloudify-azure-plugin/master/plugin.yaml', 'destination_path': '/spec/azure-plugin/1.3.1/plugin.yaml'}

      - {'source_path': 'http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml', 'destination_path': '/spec/fabric-plugin/1.3.1/plugin.yaml'}
      - {'source_path': 'http://www.getcloudify.org/spec/diamond-plugin/1.3.1/plugin.yaml', 'destination_path': '/spec/diamond-plugin/1.3.1/plugin.yaml'}
      - {'source_path': 'http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml', 'destination_path': '/spec/cloudify/3.3.1/types.yaml'}

  #############################
  # Dev Inputs
  #############################

  # For development purposes, you can use these, which will override the modules
  # supplied within the rpm.
  # These should be pip installable tar.gz files.
  # Note that `install_python_compilers` must not be an empty string if one of the
  # below modules require compilation.
  install_python_compilers:
    type: string
    default: ''

  cli_source_url:
    type: string
    default: ''

  rest_service_source_url:
    type: string
    default: ''

  dsl_parser_source_url:
    type: string
    default: ''

  rest_client_source_url:
    type: string
    default: ''

  plugins_common_source_url:
    type: string
    default: ''

  script_plugin_source_url:
    type: string
    default: ''

  securest_source_url:
    type: string
    default: ''

  amqpinflux_source_url:
    type: string
    default: ''

  agent_source_url:
    type: string
    default: ''


dsl_definitions:
  azure_configuration: &azure_configuration
    subscription_id: { get_input: subscription_id }
    location: { get_input: location }
    vm_size: { get_input: vm_size }
    vm_prefix: { get_input: vm_prefix }       
    image_reference_offer: { get_input: image_reference_offer}
    image_reference_publisher: { get_input: image_reference_publisher}
    image_reference_sku: { get_input: image_reference_sku}
    client_id: { get_input: client_id }
    tenant_id: { get_input: tenant_id }
    ssh_username: { get_input: ssh_user }
    aad_password: { get_input: aad_password }
    custom_script_command: { get_input: custom_script_command}
    custom_script_path: { get_input: custom_script_path}
    data_disk_size_GB: { get_input: data_disk_size_GB}
    data_disk_logical_unit_number: { get_input: data_disk_logical_unit_number}
    security_group_destinationAddressPrefix: { get_input: security_group_destinationAddressPrefix}
    use_external_resource: { get_input: use_external_resource }
    existing_resource_group_name: { get_input: existing_resource_group_name }
    existing_security_group_name: { get_input: existing_security_group_name }
    existing_storage_account_name: { get_input: existing_storage_account_name }
    existing_vnet_name: { get_input: existing_vnet_name }
    subnet: { get_input: subnet }
    existing_nic_name: { get_input: existing_nic_name }
    existing_public_ip_name: { get_input: existing_public_ip_name }

######################################################################
# These nodes comprise the manager's infrastructure and components
######################################################################
node_templates:

  # #####################################################################
  # The manager_configuration node is meant to be read by Cloudify to
  # provide runtime configuration and information for the CLI and the
  # Manager.
  # #####################################################################
  manager_configuration:
    type: cloudify.nodes.MyCloudifyManager
    properties:
      ssh_user: { get_input: ssh_user }
      ssh_key_filename: { get_input: ssh_key_filename }
      agent_local_key_path: { get_input: agent_local_key_path }
      agent_remote_key_path: { get_input: agent_remote_key_path }
      cloudify:
        plugins:
          azure_config_path: ~/azure_config.json

        resources_prefix: { get_input: vm_prefix }

        transient_deployment_workers_mode:
          enabled: true
          global_parallel_executions_limit: 50

        cloudify_agent:
          min_workers: 0
          max_workers: 5
          remote_execution_port: 22
          user: { get_input: ssh_user }
          broker_ip: { get_input: rabbitmq_endpoint_ip }
          broker_user: { get_input: rabbitmq_username }
          broker_pass: { get_input: rabbitmq_password }
          broker_ssl_enabled: { get_input: rabbitmq_ssl_enabled }
          broker_ssl_cert: { get_input: rabbitmq_cert_public }
          env:
            AZURE_CONFIG_PATH: { get_property: [SELF, cloudify, plugins, azure_config_path] }

        workflows:
          task_retries: -1  # this means forever
          task_retry_interval: 30

        policy_engine:
          start_timeout: 30

        # Declare rules for the default import resolver
        # which enables using the manager in offline mode.
        # The resolver replaces an import's http link with the local path
        # on the manager according to the matching rule's value.
        # If the resolver cannot read the import from the specified local path
        # (e.g. when the manager is not in offline mode),
        # it will fall back to the original http link.
        import_resolver:
          parameters:
            rules:
            - {'http://www.getcloudify.org/spec': 'http://localhost:53229/spec'}

        upload_resources:
          plugin_resources: { get_input: plugin_resources }
          dsl_resources: { get_input: dsl_resources }


    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file: components/manager/scripts/azure/configure.py
            task_name: configure
            task_properties:
              azure_config: *azure_configuration
            fabric_env: &manager_fabric_env
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_key_filename }
              host_string: { get_attribute: [manager_host, vm_public_ip] }
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: components/manager/scripts/configure_manager.sh
            fabric_env:
              <<: *manager_fabric_env
              always_use_pty: true

    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
        target_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            postconfigure:
             implementation: components/manager/scripts/set_manager_public_ip.py
             inputs:
              public_ip: { get_attribute: [manager_host, vm_public_ip] }

  manager_host:
    type: cloudify.azure.nodes.Server
    properties:
      image_reference_offer: { get_input: image_reference_offer}
      image_reference_publisher: { get_input: image_reference_publisher}
      image_reference_sku: { get_input: image_reference_sku}
      vm_prefix: { get_input: vm_prefix}      
      vm_size: { get_input: vm_size}
      key_data: { get_input: key_data}
      ssh_username: { get_input: ssh_user}
      install_agent: false
    relationships:
      - target: manager_nic
        type: cloudify.azure.relationships.server_connected_to_nic
      - target: manager_data_disk
        type: cloudify.azure.relationships.server_connected_to_datadisk
      - target: manager_storage_account
        type: cloudify.azure.relationships.server_connected_to_storage_account
      - target: manager_resource_group
        type: cloudify.relationships.contained_in


  manager_resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      use_external_resource: { get_input: use_external_resource}
      existing_resource_group_name: { get_input: existing_resource_group_name}

    relationships:
      - target: azure_token
        type: cloudify.azure.relationships.resource_depends_on_azure_token


  manager_storage_account:
    type: cloudify.azure.nodes.StorageAccount
    properties:
      use_external_resource: { get_input: use_external_resource}
      existing_storage_account_name: { get_input: existing_storage_account_name}

    relationships:
      - target: manager_resource_group
        type: cloudify.azure.relationships.storage_account_contained_in_resource_group
        
  manager_data_disk:
    type: cloudify.azure.nodes.DataDisk
    properties:
      data_disk_size_GB: { get_input: data_disk_size_GB}
      data_disk_logical_unit_number: { get_input: data_disk_logical_unit_number}

    relationships:
      - target: manager_storage_account
        type: cloudify.azure.relationships.datadisk_contained_in_storage_account

  manager_public_ip:
    type: cloudify.azure.nodes.PublicIP
    properties:
      use_external_resource: { get_input: use_external_resource}
      existing_public_ip_name: { get_input: existing_public_ip_name}

    relationships:
      - target: manager_vnet
        type: cloudify.azure.relationships.public_ip_connected_to_vnet
      - target: manager_resource_group
        type: cloudify.relationships.contained_in

  manager_custom_script:
    type: cloudify.azure.nodes.CustomScript
    properties:
      use_external_resource: { get_input: use_external_resource}
      custom_script_path: { get_input: custom_script_path}
      custom_script_command: { get_input: custom_script_command}

    relationships:
      - target: manager_host
        type: cloudify.azure.relationships.custom_script_contained_in_server

  manager_nic:
    type: cloudify.azure.nodes.NIC
    properties:
      use_external_resource: { get_input: use_external_resource}
      existing_nic_name: { get_input: existing_nic_name}

    relationships:
      - target: manager_public_ip
        type: cloudify.azure.relationships.nic_connected_to_public_ip
      - target: manager_resource_group
        type: cloudify.relationships.contained_in

  manager_security_group:
    type: cloudify.azure.nodes.SecurityGroup
    properties:
      use_external_resource: { get_input: use_external_resource}
      existing_security_group_name: { get_input: existing_security_group_name}
      rules:
        - protocol: TCP
          access: 'Allow'
          priority: '100'
          from_port: 80
          to_port: 80
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          cidr_ip: 0.0.0.0/32
          direction: 'Inbound'
        - protocol: TCP
          access: 'Allow'
          priority: '200'
          from_port: 443
          to_port: 443
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          cidr_ip: 0.0.0.0/32
          direction: 'Inbound'
        - protocol: TCP
          access: 'Allow'
          priority: '300'
          from_port: 22
          to_port: 22
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          cidr_ip: 0.0.0.0/32
          direction: 'Inbound'
        - protocol: TCP
          access: 'Allow'
          priority: '400'
          from_port: 8101
          to_port: 8101
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          cidr_ip: 0.0.0.0/32
          direction: 'Inbound'
        - protocol: TCP
          access: 'Allow'
          priority: '500'
          from_port: 5672
          to_port: 5672
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          cidr_ip: 0.0.0.0/32
          direction: 'Inbound'
        - protocol: TCP
          access: 'Allow'
          priority: '600'
          from_port: 53229
          to_port: 53229
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          cidr_ip: 0.0.0.0/32
          direction: 'Inbound'


    relationships:
      - target: manager_resource_group
        type: cloudify.azure.relationships.security_group_contained_in_resource_group

  manager_subnet:
    type: cloudify.azure.nodes.Subnet
    properties:
      use_external_resource: { get_input: use_external_resource}
      subnet: { get_input: subnet}
      
    relationships:
      - target: manager_resource_group
        type: cloudify.azure.relationships.subnet_contained_in_resource_group
      - target: manager_security_group
        type: cloudify.azure.relationships.subnet_connected_to_security_group

  manager_vnet:
    type: cloudify.azure.nodes.VNET
    properties:
      use_external_resource: { get_input: use_external_resource}
      existing_vnet_name: { get_input: existing_vnet_name}

    relationships:
      - target: manager_resource_group
        type: cloudify.azure.relationships.vnet_contained_in_resource_group
      - target: manager_subnet
        type: cloudify.azure.relationships.vnet_connected_to_subnet
      
  azure_token:
    type: cloudify.azure.nodes.azure_token
    properties:
      client_id: { get_input: client_id }
      tenant_id: { get_input: tenant_id }
      aad_password: { get_input: aad_password }
      subscription_id: { get_input: subscription_id}
      location: { get_input: location }

  # #####################################################################
  # The Python and Java nodes are used to provide runtime environments
  # on specific hosts. It allows us to define the runtime environment
  # and install it only once per host and then have a node depend on it.
  # Note that Erlang and NodeJS are also installed as runtime envs as
  # part of the RabbitMQ and WebUI nodes respectively but as they're not
  # used by multiple nodes, we're not specifying them as independent
  # entities.
  # #####################################################################
  python_runtime:
    type: manager.nodes.PythonRuntime
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  java_runtime:
    type: manager.nodes.JavaRuntime
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  ######################################################################
  # These are the nodes comprising the Cloudify Manager's components
  ######################################################################
  rabbitmq:
    type: manager.nodes.RabbitMQ
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  elasticsearch:
    type: manager.nodes.Elasticsearch
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: java_runtime

  logstash:
    type: manager.nodes.Logstash
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: java_runtime
      - type: logstash_to_elasticsearch
        target: elasticsearch

  influxdb:
    type: manager.nodes.InfluxDB
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host

  nginx:
    type: manager.nodes.Nginx
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: nginx_to_manager_configuration
        target: manager_configuration

  riemann:
    type: manager.nodes.Riemann
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: java_runtime
      - type: riemann_to_rabbitmq
        target: rabbitmq
      - type: riemann_to_nginx
        target: nginx

  rest_service:
    type: manager.nodes.RestService
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: python_runtime
      - type: rest_to_mgr_config
        target: manager_configuration
      - type: restservice_to_elasticsearch
        target: elasticsearch
      - type: restservice_to_rabbitmq
        target: rabbitmq

  mgmt_worker:
    type: manager.nodes.ManagementWorker
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: python_runtime
      - type: mgmtworker_to_rabbitmq
        target: rabbitmq
      - type: mgmtworker_to_nginx
        target: nginx

  amqp_influx:
    type: manager.nodes.AmqpInfluxBroker
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: cloudify.relationships.depends_on
        target: python_runtime
      - type: amqpinflux_to_rabbitmq
        target: rabbitmq
      - type: amqpinflux_to_influxdb
        target: influxdb

  webui:
    type: manager.nodes.WebUI
    relationships:
      - type: cloudify.relationships.contained_in
        target: manager_host
      - type: webui_to_restservice
        target: rest_service
      - type: webui_to_influxdb
        target: influxdb

  ######################################################################
  # Enable this node if you want to have the CLI installed within
  # the manager. This might aid in debugging problems or just
  # controlling the manager from within itself.
  ######################################################################
  # cli:
  #   type: manager.nodes.CLI
  #   relationships:
  #     - type: cloudify.relationships.contained_in
  #       target: manager_host
  #     - type: cloudify.relationships.depends_on
  #       target: nginx
  #     - type: cloudify.relationships.depends_on
  #       target: restservice

plugins:
  cli:
    install: false
    executor: central_deployment_agent

outputs:
  manager_ip:
    value: { get_attribute: [manager_host, vm_public_ip] }
